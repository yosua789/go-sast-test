basePath: /api/v1
definitions:
  dto.CreateVenueRequest:
    properties:
      capacity:
        type: integer
      city:
        maxLength: 255
        type: string
      country:
        maxLength: 255
        type: string
      name:
        maxLength: 255
        type: string
      status:
        enum:
        - ACTIVE
        - INACTIVE
        - DISABLE
        type: string
      venue_type:
        enum:
        - STADIUM
        - VENUE
        - HALL
        - OTHER
        type: string
    required:
    - city
    - country
    - name
    - status
    - venue_type
    type: object
  dto.DetailEventPublicTicketCategoryResponse:
    properties:
      code:
        type: string
      description:
        type: string
      entrance:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
      sector:
        $ref: '#/definitions/dto.TicketCategorySectorResponse'
      total_public_stock:
        type: integer
    type: object
  dto.DetailEventResponse:
    properties:
      active_settings:
        $ref: '#/definitions/dto.EventSettings'
      additional_information:
        type: string
      banner:
        type: string
      created_at:
        type: string
      description:
        type: string
      end_sale_at:
        type: string
      event_time:
        type: string
      id:
        type: string
      name:
        type: string
      organizer:
        $ref: '#/definitions/dto.SimpleOrganizerResponse'
      start_sale_at:
        type: string
      status:
        type: string
      ticket_categories:
        items:
          $ref: '#/definitions/dto.EventTicketCategoryResponse'
        type: array
      updated_at:
        type: string
      venue:
        $ref: '#/definitions/dto.SimpleVenueResponse'
    type: object
  dto.EventResponse:
    properties:
      banner:
        type: string
      created_at:
        type: string
      description:
        type: string
      end_sale_at:
        type: string
      event_time:
        type: string
      id:
        type: string
      name:
        type: string
      organizer:
        $ref: '#/definitions/dto.SimpleOrganizerResponse'
      start_sale_at:
        type: string
      status:
        type: string
      updated_at:
        type: string
      venue:
        $ref: '#/definitions/dto.SimpleVenueResponse'
    type: object
  dto.EventSettings:
    properties:
      garuda_id_verification:
        type: boolean
      max_adult_ticket_per_transaction:
        type: integer
    type: object
  dto.EventTicketCategoryResponse:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: integer
    type: object
  dto.OrganizerResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      slug:
        type: string
      updated_at:
        type: string
    type: object
  dto.PaginatedEvents:
    properties:
      events:
        items:
          $ref: '#/definitions/dto.EventResponse'
        type: array
      pagination:
        $ref: '#/definitions/dto.Pagination'
    type: object
  dto.Pagination:
    properties:
      current_page:
        type: integer
      max_page:
        type: integer
      next_page:
        type: integer
      prev_page:
        type: integer
      total_records:
        type: integer
    type: object
  dto.SimpleOrganizerResponse:
    properties:
      id:
        type: string
      logo:
        type: string
      name:
        type: string
      slug:
        type: string
    type: object
  dto.SimpleVenueResponse:
    properties:
      city:
        type: string
      country:
        type: string
      id:
        type: string
      name:
        type: string
      venue_type:
        type: string
    type: object
  dto.TicketCategorySectorResponse:
    properties:
      area_code:
        type: string
      color:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  dto.UpdateOrganizerRequest:
    properties:
      name:
        maxLength: 255
        type: string
      slug:
        maxLength: 255
        type: string
    required:
    - name
    - slug
    type: object
  dto.UpdateVenueRequest:
    properties:
      capacity:
        type: integer
      city:
        maxLength: 255
        type: string
      country:
        maxLength: 255
        type: string
      name:
        maxLength: 255
        type: string
      status:
        enum:
        - ACTIVE
        - INACTIVE
        - DISABLE
        type: string
      venue_type:
        enum:
        - STADIUM
        - VENUE
        - HALL
        - OTHER
        type: string
    required:
    - city
    - country
    - name
    - status
    - venue_type
    type: object
  dto.VenueEventTicketCategoryResponse:
    properties:
      ticket_categories:
        items:
          $ref: '#/definitions/dto.DetailEventPublicTicketCategoryResponse'
        type: array
      venue:
        $ref: '#/definitions/dto.VenueResponse'
    type: object
  dto.VenueResponse:
    properties:
      capacity:
        type: integer
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: string
      name:
        type: string
      updated_at:
        type: string
      venue_type:
        type: string
    type: object
  lib.APIResponse:
    properties:
      data: {}
      message:
        type: string
      success:
        default: true
        type: boolean
    type: object
  lib.HTTPError:
    properties:
      code:
        type: integer
      error: {}
      message:
        type: string
      success:
        default: false
        type: boolean
    type: object
host: localhost:3000
info:
  contact: {}
  description: Assist Tix API Documentation
  title: Assist Tix Documentation
  version: "1.0"
paths:
  /events:
    get:
      description: Get all paginated event
      parameters:
      - description: Search event
        in: query
        name: search
        type: string
      - description: Status event
        enum:
        - UPCOMING
        - CANCELED
        - POSTPONED
        - FINISHED
        - ON_GOING
        in: query
        name: status
        type: string
      - description: page event
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Paginated events
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.PaginatedEvents'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get all paginated event
      tags:
      - events
  /events/{eventId}:
    delete:
      description: Delete event
      parameters:
      - description: Event ID
        in: path
        name: eventId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Delete event
      tags:
      - events
    get:
      description: Get event By ID
      parameters:
      - description: Event ID
        in: path
        name: eventId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get venue by id
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DetailEventResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get event By ID
      tags:
      - events
  /events/{eventId}/ticket-categories:
    get:
      description: Get event By ID
      parameters:
      - description: Event ID
        in: path
        name: eventId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get venue by id
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.VenueEventTicketCategoryResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get public ticket categories by event ID
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create event ticket category
      produces:
      - application/json
      responses:
        "200":
          description: Success create event ticket category
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Create event ticket category
      tags:
      - events
  /events/{eventId}/ticket-categories/{ticketCategoryId}:
    get:
      consumes:
      - application/json
      description: Get event ticket category by id
      parameters:
      - description: Event ID
        in: path
        name: eventId
        type: string
      - description: Ticket Category ID
        in: path
        name: ticketCategoryId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get venue by id
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.DetailEventResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get detail event ticket category by id
      tags:
      - events
  /organizers:
    get:
      description: Get all organizer
      produces:
      - application/json
      responses:
        "200":
          description: Organizers response
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.OrganizerResponse'
                  type: array
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get all organizer
      tags:
      - organizer
    post:
      description: Create organizer
      parameters:
      - description: Name
        in: formData
        name: name
        type: string
      - description: Slug
        in: formData
        name: slug
        type: string
      - description: Logo
        in: formData
        name: logo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Organizer created successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Create organizer
      tags:
      - organizer
  /organizers/{organizerId}:
    delete:
      consumes:
      - application/json
      description: Delete organizer
      parameters:
      - description: Organizer ID
        in: path
        name: organizerId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Venue created successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Delete organizer
      tags:
      - organizer
    get:
      description: Get organizer by ID
      parameters:
      - description: Organizer ID
        in: path
        name: organizerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Organizer response
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.OrganizerResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get organizer by ID
      tags:
      - organizer
    put:
      consumes:
      - application/json
      description: Update organizer
      parameters:
      - description: Organizer ID
        in: path
        name: organizerId
        type: string
      - description: Create venue request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateOrganizerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Venue created successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Update organizer
      tags:
      - organizer
  /venues:
    get:
      description: Get all venue
      produces:
      - application/json
      responses:
        "200":
          description: List venues
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.VenueResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get all venue
      tags:
      - venue
    post:
      consumes:
      - application/json
      description: Create venue
      parameters:
      - description: Create venue request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.CreateVenueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Venue created successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Create venue
      tags:
      - venue
  /venues/{venueId}:
    delete:
      consumes:
      - application/json
      description: Delete venue
      parameters:
      - description: Venue ID
        in: path
        name: venueId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Delete successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Delete venue
      tags:
      - venue
    get:
      description: Get venue By ID
      parameters:
      - description: Venue ID
        in: path
        name: venueId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Get venue by id
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/dto.VenueResponse'
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Get venue By ID
      tags:
      - venue
    put:
      consumes:
      - application/json
      description: Edit venue
      parameters:
      - description: Venue ID
        in: path
        name: venueId
        type: string
      - description: update venue request
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateVenueRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Venue created successfully
          schema:
            allOf:
            - $ref: '#/definitions/lib.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "400":
          description: Invalid request body
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/lib.HTTPError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/lib.HTTPError'
      summary: Edit venue
      tags:
      - venue
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
