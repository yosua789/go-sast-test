// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/events": {
            "get": {
                "description": "Get all paginated event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get all paginated event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search event",
                        "name": "search",
                        "in": "query"
                    },
                    {
                        "enum": [
                            "UPCOMING",
                            "CANCELED",
                            "POSTPONED",
                            "FINISHED",
                            "ON_GOING"
                        ],
                        "type": "string",
                        "description": "Status event",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "page event",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Paginated events",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.PaginatedEvents"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        },
        "/events/{eventId}": {
            "get": {
                "description": "Get event By ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Get event By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get venue by id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.EventResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete event",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "events"
                ],
                "summary": "Delete event",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Event ID",
                        "name": "eventId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        },
        "/organizers": {
            "get": {
                "description": "Get all organizer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizer"
                ],
                "summary": "Get all organizer",
                "responses": {
                    "200": {
                        "description": "Organizers response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/dto.OrganizerResponse"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create organizer",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizer"
                ],
                "summary": "Create organizer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Slug",
                        "name": "slug",
                        "in": "formData"
                    },
                    {
                        "type": "file",
                        "description": "Logo",
                        "name": "logo",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizer created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        },
        "/organizers/{organizerId}": {
            "get": {
                "description": "Get organizer by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizer"
                ],
                "summary": "Get organizer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organizer ID",
                        "name": "organizerId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organizer response",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.OrganizerResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Update organizer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizer"
                ],
                "summary": "Update organizer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organizer ID",
                        "name": "organizerId",
                        "in": "path"
                    },
                    {
                        "description": "Create venue request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateOrganizerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete organizer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organizer"
                ],
                "summary": "Delete organizer",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Organizer ID",
                        "name": "organizerId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        },
        "/venues": {
            "get": {
                "description": "Get all venue",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "summary": "Get all venue",
                "responses": {
                    "200": {
                        "description": "List venues",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VenueResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "post": {
                "description": "Create venue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "summary": "Create venue",
                "parameters": [
                    {
                        "description": "Create venue request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.CreateVenueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        },
        "/venues/{venueId}": {
            "get": {
                "description": "Get venue By ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "summary": "Get venue By ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get venue by id",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/dto.VenueResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "put": {
                "description": "Edit venue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "summary": "Edit venue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path"
                    },
                    {
                        "description": "update venue request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.UpdateVenueRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Venue created successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete venue",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "venue"
                ],
                "summary": "Delete venue",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Venue ID",
                        "name": "venueId",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Delete successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/lib.APIResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "object"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/lib.HTTPError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.CreateVenueRequest": {
            "type": "object",
            "required": [
                "city",
                "country",
                "name",
                "status",
                "venue_type"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "maxLength": 255
                },
                "country": {
                    "type": "string",
                    "maxLength": 255
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DISABLE"
                    ]
                },
                "venue_type": {
                    "type": "string",
                    "enum": [
                        "STADIUM",
                        "VENUE",
                        "HALL",
                        "OTHER"
                    ]
                }
            }
        },
        "dto.EventResponse": {
            "type": "object",
            "properties": {
                "banner": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "end_sale_at": {
                    "type": "string"
                },
                "event_time": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "organizer": {
                    "$ref": "#/definitions/dto.SimpleOrganizerResponse"
                },
                "start_sale_at": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "venue": {
                    "$ref": "#/definitions/dto.SimpleVenueResponse"
                }
            }
        },
        "dto.OrganizerResponse": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "dto.PaginatedEvents": {
            "type": "object",
            "properties": {
                "events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dto.EventResponse"
                    }
                },
                "pagination": {
                    "$ref": "#/definitions/dto.Pagination"
                }
            }
        },
        "dto.Pagination": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "max_page": {
                    "type": "integer"
                },
                "next_page": {
                    "type": "integer"
                },
                "prev_page": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        },
        "dto.SimpleOrganizerResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "logo": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "dto.SimpleVenueResponse": {
            "type": "object",
            "properties": {
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "venue_type": {
                    "type": "string"
                }
            }
        },
        "dto.UpdateOrganizerRequest": {
            "type": "object",
            "required": [
                "name",
                "slug"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "slug": {
                    "type": "string",
                    "maxLength": 255
                }
            }
        },
        "dto.UpdateVenueRequest": {
            "type": "object",
            "required": [
                "city",
                "country",
                "name",
                "status",
                "venue_type"
            ],
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "city": {
                    "type": "string",
                    "maxLength": 255
                },
                "country": {
                    "type": "string",
                    "maxLength": 255
                },
                "name": {
                    "type": "string",
                    "maxLength": 255
                },
                "status": {
                    "type": "string",
                    "enum": [
                        "ACTIVE",
                        "INACTIVE",
                        "DISABLE"
                    ]
                },
                "venue_type": {
                    "type": "string",
                    "enum": [
                        "STADIUM",
                        "VENUE",
                        "HALL",
                        "OTHER"
                    ]
                }
            }
        },
        "dto.VenueResponse": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "integer"
                },
                "city": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "venue_type": {
                    "type": "string"
                }
            }
        },
        "lib.APIResponse": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": true
                }
            }
        },
        "lib.HTTPError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "error": {},
                "message": {
                    "type": "string"
                },
                "success": {
                    "type": "boolean",
                    "default": false
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:3000",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Assist Tix Documentation",
	Description:      "Assist Tix API Documentation",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
